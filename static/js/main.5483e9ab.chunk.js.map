{"version":3,"sources":["assets/imgs/icon-paper.svg","assets/imgs/icon-rock.svg","assets/imgs/icon-scissors.svg","assets/imgs/image-rules.svg","assets/imgs/icon-close.svg","cmps/Score.js","cmps/Icon.js","cmps/IconsList.js","cmps/EmptyIcon.js","cmps/GameResult.js","cmps/Victorious.js","services/GameService.js","cmps/GameMode.js","cmps/Board.js","cmps/RulesBtn.js","cmps/RulesModal.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Score","props","className","score","Icon","icon","name","size","onClick","onPlayerChoice","src","alt","IconsList","icons","map","key","_id","EmptyIcon","GameResult","gameResult","resetGame","Victorious","useState","isFirstCircleShown","setIsFirstCircleShown","isSecondCircleShown","setIsSecondCircleShown","isThirdCircleShown","setIsThirdCircleShown","useEffect","firstTimeout","setTimeout","secondTimeout","thirdTimeout","clearTimeout","storeScore","loadScore","gameOutcome","playerCoin","computerCoin","updateScore","diff","newScore","showGameResult","any","localStorage","JSON","stringify","str","parse","GameMode","computerIcon","setComputerIcon","setGameResult","num","Math","floor","random","IconName","selectedComputerIcon","filter","selectComputerIcon","GameService","updatedScore","Board","playerChoice","setPlayerChoice","selectedIcon","setSelectedIcon","iconPaper","iconRock","iconScissors","iconName","selected","RulesBtn","onToggle","RulesModal","iconClose","rulesImg","Home","toggleRulesModal","setToggleRulesModal","setScore","onToggleRulesModal","App","basename","process","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5483e9ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-paper.69a8c2e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rock.8ce1e109.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-scissors.bec2f9b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-rules.5d74d25d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.919ab92a.svg\";","import React from 'react';\r\n\r\nexport default function Score (props){\r\n    return (\r\n        <div className=\"main-container score-container\">\r\n            <div className=\"score-subcontainer\">\r\n                <div className=\"title-container\">\r\n                    <h1 className=\"uppercase\">rock paper scissors</h1>\r\n                </div>\r\n                <div className=\"flex score-card-container\">\r\n                    <div className=\"uppercase score-title\">score</div>\r\n                    <div className=\"score-number\">{props.score}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Icon(props) {\r\n    \r\n    const clickHandler = () => {\r\n        if (!props.onPlayerChoice) return;\r\n        props.onPlayerChoice(props.icon.name);\r\n    }\r\n\r\n    return (\r\n        <div className={`flex center align-center icon-container ${props.icon.name} ${props.icon.size} + ${(props.icon.size) ? '' : 'pointer'} `}>\r\n            <div className=\"flex center align-center icon-inner-container\" onClick={clickHandler}>\r\n                <img src={`${props.icon.src}`} alt=\"\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport Icon from './Icon';\r\n\r\nexport default function IconsList(props) {\r\n    return (\r\n        props.icons.map((icon) => <Icon key={icon._id} icon={icon} onPlayerChoice={props.onPlayerChoice}/>)\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function EmptyIcon() {\r\n\r\n    return (\r\n        <div className=\"flex align-center empty-icon-container\">\r\n            <div className=\"empty-icon-inner-container\">\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function GameResult(props) {\r\n    return (\r\n        <div className=\"flex column game-result-container\">\r\n            <div className=\"uppercase game-result-title\">\r\n                {props.gameResult}\r\n            </div>\r\n            <div className=\"flex center align-center pointer play-again-button\" onClick={props.resetGame}>\r\n                <div className=\"uppercase\">play again</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Victorious() {\r\n\r\n    const [isFirstCircleShown, setIsFirstCircleShown] = useState(false);\r\n    const [isSecondCircleShown, setIsSecondCircleShown] = useState(false);\r\n    const [isThirdCircleShown, setIsThirdCircleShown] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let firstTimeout = () => setTimeout(() => setIsFirstCircleShown(true), 1000);\r\n        let secondTimeout = () => setTimeout(() => setIsSecondCircleShown(true), 2000);\r\n        let thirdTimeout = () => setTimeout(() => setIsThirdCircleShown(true), 3000);\r\n        firstTimeout();\r\n        secondTimeout();\r\n        thirdTimeout();\r\n        return () => {\r\n            clearTimeout(firstTimeout, secondTimeout, thirdTimeout);\r\n            setIsFirstCircleShown(false);\r\n            setIsSecondCircleShown(false);\r\n            setIsThirdCircleShown(false);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex center align-center victorious-container\">\r\n            {isFirstCircleShown && !isSecondCircleShown && !isThirdCircleShown ?\r\n                <div className=\"flex center align-center third-ghost-circle\">\r\n                    <div className=\"flex center align-center second-ghost-circle\">\r\n                        <div className=\"flex center align-center first-circle\">\r\n                        </div>\r\n                    </div>\r\n                </div> : ''}\r\n            {isFirstCircleShown && isSecondCircleShown && !isThirdCircleShown ?\r\n                <div className=\"flex center align-center third-ghost-circle\">\r\n                    <div className=\"flex center align-center second-circle\">\r\n                        <div className=\"flex center align-center first-circle\">\r\n                        </div>\r\n                    </div>\r\n                </div> : ''}\r\n            {isFirstCircleShown && isSecondCircleShown && isThirdCircleShown ?\r\n                <div className=\"flex center align-center third-circle\">\r\n                    <div className=\"flex center align-center second-circle\">\r\n                        <div className=\"flex center align-center first-circle\">\r\n                        </div>\r\n                    </div>\r\n                </div> : ''}\r\n        </div>\r\n    )\r\n}","export default {\r\n    storeScore,\r\n    loadScore,\r\n    gameOutcome,\r\n    updateScore,\r\n    showGameResult\r\n}\r\n\r\nconst KEY = 'score';\r\n\r\nfunction storeScore(key, any) {\r\n    localStorage[key] = JSON.stringify(any);\r\n}\r\n\r\nfunction loadScore(key) {\r\n    var str = localStorage[key] || 0;\r\n    return JSON.parse(str);\r\n}\r\n\r\nfunction gameOutcome(playerCoin, computerCoin) {\r\n    switch (playerCoin.name) {\r\n        case 'paper':\r\n            return (computerCoin.name === 'rock') ? 1 : \r\n                   (computerCoin.name === 'scissors') ? -1 : 0;\r\n        case 'rock':\r\n            return (computerCoin.name === 'scissors') ? 1 : \r\n                   (computerCoin.name === 'paper') ? -1 : 0;\r\n        case 'scissors':\r\n            return (computerCoin.name === 'paper') ? 1 : \r\n                   (computerCoin.name === 'rock') ? -1 : 0;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nfunction updateScore(diff) {\r\n    let score = loadScore(KEY);\r\n    let newScore = score + diff;\r\n    (newScore < 0) ? storeScore(KEY, 0) : storeScore(KEY, newScore);\r\n    return (newScore < 0) ? 0 : newScore;\r\n}\r\n\r\nfunction showGameResult(diff) {\r\n    return (diff === 1) ? 'you win' : (diff === -1) ? 'you lose' : 'draw';\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport Icon from './Icon';\r\nimport EmptyIcon from './EmptyIcon';\r\nimport GameResult from './GameResult';\r\nimport Victorious from './Victorious';\r\n\r\nimport GameService from '../services/GameService';\r\n\r\nexport default function GameMode(props) {\r\n\r\n    const [computerIcon, setComputerIcon] = useState('');\r\n    const [gameResult, setGameResult] = useState('');\r\n\r\n    const selectComputerIcon = () => {\r\n        const num = Math.floor(Math.random() * 3)\r\n        const IconName = (num === 0) ? 'rock' : (num === 1) ? 'paper' : 'scissors';\r\n        const selectedComputerIcon = props.icons.filter(icon => icon.name === IconName);\r\n        selectedComputerIcon[0].size = 'big';\r\n        setComputerIcon(selectedComputerIcon[0]);\r\n    }\r\n\r\n    const gameOutcome = () => {\r\n        const diff = GameService.gameOutcome(props.icon, computerIcon);\r\n        const updatedScore = GameService.updateScore(diff);\r\n        setGameResult(GameService.showGameResult(diff));\r\n        props.updateScore(updatedScore);\r\n    }\r\n\r\n    const resetGame = () => {\r\n        props.resetGame();\r\n        setComputerIcon('');\r\n        setGameResult('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        let firstTimeout = () => setTimeout(() => selectComputerIcon(), 1000);\r\n        let secondTimeout = () => setTimeout(() => gameOutcome(), 1000);\r\n        (computerIcon === '') ? firstTimeout() : secondTimeout();\r\n        return () => {\r\n            clearTimeout(firstTimeout, secondTimeout);\r\n        }\r\n    }, [computerIcon]);\r\n\r\n    return (\r\n        <div className=\"flex game-mode-container\">\r\n            <div className=\"flex player-panel-container\">\r\n                <div className=\"uppercase panel-title\">you picked</div>\r\n                {(gameResult === 'you win') ? <Victorious><Icon icon={props.icon} /></Victorious> : ''}\r\n                <Icon icon={props.icon} />\r\n            </div>\r\n            {(gameResult === '') ? '' : <GameResult gameResult={gameResult} resetGame={resetGame} />}\r\n            <div className=\"flex computer-panel-container\">\r\n                <div className=\"uppercase panel-title\">the house picked</div>\r\n                {(gameResult === 'you lose') ? <Victorious><Icon icon={props.icon} /></Victorious> : ''}\r\n                {(computerIcon === '') ? <EmptyIcon /> : <Icon icon={computerIcon} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nimport IconsList from './IconsList';\r\nimport GameMode from './GameMode';\r\n\r\nimport iconPaper from '../assets/imgs/icon-paper.svg';\r\nimport iconRock from '../assets/imgs/icon-rock.svg';\r\nimport iconScissors from '../assets/imgs/icon-scissors.svg';\r\n\r\nexport default function Board(props) {\r\n\r\n    const [playerChoice, setPlayerChoice] = useState('');\r\n    const [selectedIcon, setSelectedIcon] = useState({});\r\n\r\n    const icons = [{ src: iconPaper, name: 'paper', _id: 'paperIcon' },\r\n    { src: iconRock, name: 'rock', _id: 'rockIcon' },\r\n    { src: iconScissors, name: 'scissors', _id: 'scissorsIcon' }]\r\n\r\n    const onSetPlayerChoice = (iconName) => {\r\n        const selected = icons.filter(icon => icon.name === iconName);\r\n        selected[0].size = 'big';\r\n        setPlayerChoice(iconName);\r\n        setSelectedIcon(selected[0]);\r\n    }\r\n\r\n    const resetGame = () => {\r\n        setPlayerChoice('');\r\n        setSelectedIcon({});\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex center full main-container\">\r\n            {(playerChoice === '') ?\r\n                <div className=\"icons-container\">\r\n                    <IconsList icons={icons} onPlayerChoice={onSetPlayerChoice} />\r\n                </div>\r\n                : <GameMode playerChoice={playerChoice} icon={selectedIcon}\r\n                    updateScore={props.updateScore} icons={icons} resetGame={resetGame} />}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function RulesBtn(props) {\r\n\r\n    return (\r\n        <div className=\"flex rules-container\">\r\n            <div className=\"flex center align-center uppercase pointer btn-rules\" onClick={props.onToggle}>\r\n                <div>rules</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport rulesImg from '../assets/imgs/image-rules.svg';\r\nimport iconClose from '../assets/imgs/icon-close.svg';\r\n\r\nexport default function RulesModal(props) {\r\n    return (\r\n        <div className=\"rules-modal-screen\">\r\n            <div className=\"flex column rules-modal\">\r\n                <div className=\"flex modal-title-container\">\r\n                    <div className=\"uppercase modal-title\">rules</div>\r\n                    <div className=\"pointer\" onClick={props.onToggle}>\r\n                        <img src={iconClose} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"rules-img-container\">\r\n                    <img src={rulesImg} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nimport Score from '../cmps/Score';\r\nimport Board from '../cmps/Board';\r\nimport RulesBtn from '../cmps/RulesBtn';\r\nimport RulesModal from '../cmps/RulesModal';\r\n\r\nimport GameService from '../services/GameService';\r\n\r\nexport default function Home() {\r\n\r\n    const [toggleRulesModal, setToggleRulesModal] = useState(false);\r\n    const [score, setScore] = useState(GameService.loadScore('score'));\r\n\r\n    const onToggleRulesModal = () => {\r\n        setToggleRulesModal(!toggleRulesModal);\r\n    }\r\n\r\n    const updateScore = (updatedScore) => {\r\n        setScore(updatedScore);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex column align-center home-container\">\r\n            <Score score={score} />\r\n            <Board updateScore={updateScore} />\r\n            <RulesBtn onToggle={onToggleRulesModal} />\r\n            {toggleRulesModal && <RulesModal onToggle={onToggleRulesModal} />}\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './styles/global.scss';\n\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}